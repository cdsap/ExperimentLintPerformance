name: "Java Memory Monitor"
description: "Tracks memory usage of Gradle/Kotlin daemons during the job"

inputs:
    interval:
        description: "Polling interval in seconds"
        required: false
        default: "5"

runs:
    using: "composite"
    steps:
        - name: Start Java memory monitor
          id: monitor_start
          shell: bash
          run: |
              chmod +x ${{ github.action_path }}/monitor.sh
              nohup ${{ github.action_path }}/monitor.sh "${{ inputs.interval }}" > java_mem_monitor.log 2>&1 &
              echo $! > monitor.pid
              echo "monitor_pid=$!" >> $GITHUB_OUTPUT

        - name: Register post script
          id: register_post
          shell: bash
          run: |
              cat << 'EOF' > post-monitor.sh
              #!/bin/bash
              echo "Stopping Java memory monitor..."
              if [[ -f monitor.pid ]]; then
                kill "$(cat monitor.pid)" || true
                rm monitor.pid
              fi

              # Ensure we have write access to the summary file
              if [[ -n "$GITHUB_STEP_SUMMARY" ]]; then
                echo "### Java Memory Monitor Summary" > "$GITHUB_STEP_SUMMARY"
                if [[ -f java_mem_monitor.log ]]; then
                  echo "Last 20 lines of memory monitoring:" >> "$GITHUB_STEP_SUMMARY"
                  tail -n 20 java_mem_monitor.log >> "$GITHUB_STEP_SUMMARY"
                else
                  echo "No monitoring log found" >> "$GITHUB_STEP_SUMMARY"
                fi
              else
                echo "Warning: GITHUB_STEP_SUMMARY is not set"
              fi

              mkdir -p logs
              mv java_mem_monitor.log logs/ || true
              EOF

              chmod +x post-monitor.sh
              echo "post_script_path=$(pwd)/post-monitor.sh" >> $GITHUB_OUTPUT

        - name: Execute post-monitor script
          id: post_monitor
          shell: bash
          if: always()
          run: |
            if [[ -f "${{ steps.register_post.outputs.post_script_path }}" ]]; then
              "${{ steps.register_post.outputs.post_script_path }}"
            else
              echo "Post script not found at ${{ steps.register_post.outputs.post_script_path }}"
            fi

        - name: Display Summary
          shell: bash
          if: always()
          run: |
            if [[ -f "$GITHUB_STEP_SUMMARY" ]]; then
              cat "$GITHUB_STEP_SUMMARY"
            else
              echo "No summary file found at $GITHUB_STEP_SUMMARY"
            fi
