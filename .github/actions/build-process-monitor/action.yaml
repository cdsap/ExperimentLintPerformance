name: "Java Memory Monitor"
description: "Tracks memory usage of Gradle/Kotlin daemons during the job"

inputs:
    interval:
        description: "Polling interval in seconds"
        required: false
        default: "5"

runs:
    using: "composite"
    steps:
        - name: Start Java memory monitor
          shell: bash
          run: |
              chmod +x ${{ github.action_path }}/monitor.sh
              nohup ${{ github.action_path }}/monitor.sh "${{ inputs.interval }}" > java_mem_monitor.log 2>&1 &
              echo $! > monitor.pid

        - name: Register post script
          shell: bash
          run: |
              cat << 'EOF' > post-monitor.sh
              #!/bin/bash
              echo "Stopping Java memory monitor..."
              if [[ -f monitor.pid ]]; then
                kill "$(cat monitor.pid)" || true
                rm monitor.pid
              fi

              echo "### Java Memory Monitor Summary" >> $GITHUB_STEP_SUMMARY
              if [[ -f java_mem_monitor.log ]]; then
                echo "Last 20 lines of memory monitoring:" >> $GITHUB_STEP_SUMMARY
                tail -n 20 java_mem_monitor.log >> $GITHUB_STEP_SUMMARY
              else
                echo "No monitoring log found" >> $GITHUB_STEP_SUMMARY
              fi

              mkdir -p logs
              mv java_mem_monitor.log logs/ || true
              EOF

              chmod +x post-monitor.sh
              echo "::save-state name=monitorPostScript::post-monitor.sh"

        - name: Execute post-monitor script
          shell: bash
          if: always()
          run: |
            if [[ -f "$(cat $GITHUB_STATE | grep monitorPostScript | cut -d= -f2)" ]]; then
              ./post-monitor.sh
            fi
